/* css/animations.css */

/* Typewriter Effect */
.typewriter-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    text-align: center;
    background: var(--background-color);
    color: var(--text-color);
}

#typewriter-text {
    font-size: clamp(1.5em, 5vw, 2.5em);
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid;
    animation: typing 3s steps(40, end), blink-caret .75s step-end infinite;
    margin-bottom: 20px;
}

@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: var(--text-color); }
}

/* Reduced motion */
@media (prefers-reduced-motion) {
    #typewriter-text {
        animation: none;
        border-right: none;
    }
}

/* Stars Background */
#stars-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: transparent;
}

/* Main content layout */
.main-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    text-align: center;
    position: relative;
    z-index: 1;
}

.buttons-container {
    margin-top: 30px;
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
    justify-content: center;
}

/* Fugitive Button and Footprints */
#no-button {
    transition: all 0.1s ease-out;
}

.footprint {
    position: absolute;
    width: 20px; /* Tamanho da patinha */
    height: 20px;
    background-color: rgba(255, 255, 255, 0.5); /* Cor da patinha */
    border-radius: 50%; /* Formato circular, pode ser ajustado para patinha real */
    opacity: 0;
    animation: footprint-fade 1s forwards;
    pointer-events: none;
    transform: translate(-50%, -50%);
}

@keyframes footprint-fade {
    0% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
    50% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
    100% { opacity: 0; transform: translate(-50%, -50%) scale(1.2); }
}

/* Flower Animation (HTML/CSS only) */
.flower-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    position: relative;
    z-index: 1;
}

.flower {
    position: relative;
    width: 100px;
    height: 100px;
    /* Initial state of the flower */
}

.flower::before, .flower::after {
    content: ";
    position: absolute;
    width: 50px;
    height: 50px;
    background-color: #FFC1E3; /* Cor da p√©tala */
    border-radius: 50%;
    transform-origin: 50% 50%;
}

/* Example petals - more can be added */
.flower::before {
    top: 0;
    left: 25px;
    transform: rotate(45deg);
}

.flower::after {
    top: 25px;
    left: 0;
    transform: rotate(-45deg);
}

/* Bloom animation - simplified, will be controlled by JS */
@keyframes bloom {
    from { transform: scale(0); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

.flower.blooming .petal {
    animation: bloom 2s forwards;
}

/* Message container for sim.html */
.message-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    z-index: 2;
    opacity: 0;
    transition: opacity 1s ease-in;
}

.message-container.show {
    opacity: 1;
}

/* Responsive adjustments */
@media (max-width: 640px) {
    .buttons-container {
        flex-direction: column;
    }
}


